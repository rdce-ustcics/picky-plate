{"ast":null,"code":"const API = process.env.REACT_APP_API_URL || ''; // with CRA proxy, '' is fine\n\nexport async function api(path, options = {}) {\n  const res = await fetch(`${API}${path}`, {\n    credentials: 'include',\n    // send/receive auth cookie\n    headers: {\n      'Content-Type': 'application/json',\n      ...(options.headers || {})\n    },\n    ...options\n  });\n  if (!res.ok) {\n    const err = await res.json().catch(() => ({}));\n    throw new Error(err.message || `Request failed: ${res.status}`);\n  }\n  return res.json();\n}","map":{"version":3,"names":["API","process","env","REACT_APP_API_URL","api","path","options","res","fetch","credentials","headers","ok","err","json","catch","Error","message","status"],"sources":["C:/React/pappy/src/auth/api.js"],"sourcesContent":["const API = process.env.REACT_APP_API_URL || ''; // with CRA proxy, '' is fine\r\n\r\nexport async function api(path, options = {}) {\r\n  const res = await fetch(`${API}${path}`, {\r\n    credentials: 'include', // send/receive auth cookie\r\n    headers: { 'Content-Type': 'application/json', ...(options.headers || {}) },\r\n    ...options\r\n  });\r\n  if (!res.ok) {\r\n    const err = await res.json().catch(() => ({}));\r\n    throw new Error(err.message || `Request failed: ${res.status}`);\r\n  }\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,EAAE,CAAC,CAAC;;AAEjD,OAAO,eAAeC,GAAGA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC5C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,GAAG,GAAGK,IAAI,EAAE,EAAE;IACvCI,WAAW,EAAE,SAAS;IAAE;IACxBC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,IAAIJ,OAAO,CAACI,OAAO,IAAI,CAAC,CAAC;IAAE,CAAC;IAC3E,GAAGJ;EACL,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACI,EAAE,EAAE;IACX,MAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,MAAM,IAAIC,KAAK,CAACH,GAAG,CAACI,OAAO,IAAI,mBAAmBT,GAAG,CAACU,MAAM,EAAE,CAAC;EACjE;EACA,OAAOV,GAAG,CAACM,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}